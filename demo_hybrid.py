#!/usr/bin/env python3
"""
Hybrid Demo Script - Specialized Hybrid Analysis Demonstration
Dedicated demonstration of the Llama Vision + Med42 hybrid analysis system
"""

import os
import sys
from datetime import datetime
from ct_analyzer import CTAnalyzer

def main():
    """Main hybrid demo function"""
    print("=== CT READER - –ì–ò–ë–†–ò–î–ù–´–ô –ê–ù–ê–õ–ò–ó (LLAMA VISION + MED42) ===")
    print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ö–¢-—Å–Ω–∏–º–∫–æ–≤")
    print("–≠—Ç–∞–ø 1: –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å Llama Vision")
    print("–≠—Ç–∞–ø 2: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å Med42")
    print("–≠—Ç–∞–ø 3: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    # Check for input data
    input_dir = "input"
    if not os.path.exists(input_dir):
        print(f"\n–û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {input_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é 'input' –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ—ë DICOM-—Ñ–∞–π–ª—ã")
        return
    
    # Count DICOM files
    dicom_files = []
    for root, dirs, files in os.walk(input_dir):
        for file in files:
            if file.lower().endswith(('.dcm', '.dicom')) or not '.' in file:
                dicom_files.append(os.path.join(root, file))
    
    if not dicom_files:
        print(f"\n–û—à–∏–±–∫–∞: DICOM-—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {input_dir}")
        print("–ü–æ–º–µ—Å—Ç–∏—Ç–µ DICOM-—Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é 'input'")
        return
    
    print(f"\n–ù–∞–π–¥–µ–Ω–æ {len(dicom_files)} DICOM-—Ñ–∞–π–ª–æ–≤")
    
    # Initialize analyzer
    try:
        print("\n–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∏–±—Ä–∏–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
        analyzer = CTAnalyzer()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # Confirm analysis
    try:
        confirm = input("\n–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–∏–±—Ä–∏–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑? (y/n): ").strip().lower()
        if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
            print("–ê–Ω–∞–ª–∏–∑ –æ—Ç–º–µ–Ω—ë–Ω")
            return
    except KeyboardInterrupt:
        print("\n–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏")
        return
    
    # Run hybrid analysis
    try:
        print("\n" + "="*50)
        print("–ó–ê–ü–£–°–ö –ì–ò–ë–†–ò–î–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê")
        print("="*50)
        
        start_time = datetime.now()
        result = analyzer.analyze_directory(input_dir, mode="hybrid")
        end_time = datetime.now()
        
        if result:
            print("\n" + "="*50)
            print("‚úÖ –ì–ò–ë–†–ò–î–ù–´–ô –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û")
            print("="*50)
            
            # Display detailed results
            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {result['image_count']}")
            print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time}")
            print(f"–≠—Ç–∞–ø—ã –∞–Ω–∞–ª–∏–∑–∞: {result.get('analysis_stages', 'N/A')}")
            print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {result.get('tokens_used', 'N/A')}")
            print(f"–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: {result['timestamp']}")
            
            # Show analysis summary
            if 'summary' in result:
                print(f"\nüìã –ö–†–ê–¢–ö–û–ï –†–ï–ó–Æ–ú–ï:")
                print("-" * 40)
                summary = result['summary']
                if len(summary) > 300:
                    print(summary[:300] + "...")
                else:
                    print(summary)
            
            # Show where results are saved
            print(f"\nüíæ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–û–•–†–ê–ù–ï–ù–´:")
            print("- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: output/")
            print("- JSON —Ñ–∞–π–ª: analysis_[timestamp].json")
            print("- –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç: report_[timestamp].txt")
            
            # Option to view full analysis
            try:
                view_full = input("\n–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑? (y/n): ").strip().lower()
                if view_full in ['y', 'yes', '–¥–∞', '–¥']:
                    print("\n" + "="*60)
                    print("–ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó")
                    print("="*60)
                    print(result['analysis'])
            except KeyboardInterrupt:
                print("\n–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
                
        else:
            print("\n‚ùå –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ò–õ–°–Ø –ë–ï–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
            
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –í–û –í–†–ï–ú–Ø –ê–ù–ê–õ–ò–ó–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 