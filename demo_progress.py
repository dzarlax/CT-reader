#!/usr/bin/env python3
"""
Demo Progress Logger - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Å—Ç–∞—Ä—ã–º –∏ –Ω–æ–≤—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
"""

import time
import os
from progress_logger import (
    show_step, show_success, show_error, show_info, show_warning,
    start_progress, update_progress, complete_progress,
    get_log_file, suppress_prints
)

def demo_old_approach():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ (–º–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ª–æ–≥–æ–≤)"""
    print("=" * 60)
    print("üî¥ –°–¢–ê–†–´–ô –ü–û–î–•–û–î - –ú–ù–û–ì–û –¢–ï–•–ù–ò–ß–ï–°–ö–ò–• –õ–û–ì–û–í")
    print("=" * 60)
    
    print("2025-07-10 12:06:15,912 - transformers.modeling_utils - INFO - loading weights file...")
    print("2025-07-10 12:06:16,234 - transformers.modeling_utils - INFO - All model checkpoint weights were used...")
    print("2025-07-10 12:06:16,456 - transformers.tokenization_utils - INFO - loading file vocab.json...")
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MedGemma –∫–ª–∏–µ–Ω—Ç–∞...")
    print("üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: cuda")
    print("üßπ CUDA –∫—ç—à –æ—á–∏—â–µ–Ω")
    print("üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: cuda")
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CUDA –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("üíæ GPU –ø–∞–º—è—Ç—å: 24.0GB –æ–±—â–∞—è, 2.3GB —Å–≤–æ–±–æ–¥–Ω–∞—è")
    print("‚úÖ –¢–æ–∫–µ–Ω Hugging Face –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    print("üîë –¢–æ–∫–µ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: hf_1234567...")
    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ MedGemma –º–æ–¥–µ–ª–∏: google/medgemma-4b-it")
    print("2025-07-10 12:06:18,789 - transformers.modeling_utils - INFO - loading configuration file...")
    print("2025-07-10 12:06:19,123 - transformers.modeling_utils - INFO - Model config AutoConfig...")
    print("‚úÖ MedGemma –º–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ cuda")
    print("üîß –ú–æ–¥–µ–ª—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è + —Ç–µ–∫—Å—Ç")
    print("üìä –ù–∞–π–¥–µ–Ω–æ 1797 DICOM –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("üîç MedGemma –∞–Ω–∞–ª–∏–∑ CT –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (1797 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)...")
    print("üè• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –í–°–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
    print("üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–∫–µ—Ç–∞ 1/360 (5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)...")
    print("üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 1/1797: ‚úÖ")
    print("üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 2/1797: ‚úÖ")
    print("üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 3/1797: ‚úÖ")
    print("üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 4/1797: ‚úÖ")
    print("üìä –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 5/1797: ‚úÖ")
    print("‚è∏Ô∏è –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ GPU...")
    print("üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–∫–µ—Ç–∞ 2/360 (5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)...")
    print("...")
    print("üòµ –°–õ–ò–®–ö–û–ú –ú–ù–û–ì–û –¢–ï–•–ù–ò–ß–ï–°–ö–ò–• –î–ï–¢–ê–õ–ï–ô!")
    print("üòµ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –¢–ï–†–Ø–ï–¢–°–Ø –í –õ–û–ì–ê–•!")
    
    time.sleep(2)

def demo_new_approach():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ (–∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å + –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª)"""
    print("\n" + "=" * 60)
    print("üü¢ –ù–û–í–´–ô –ü–û–î–•–û–î - –ö–†–ê–°–ò–í–´–ô –ò–ù–¢–ï–†–§–ï–ô–° + –õ–û–ì–ò –í –§–ê–ô–õ")
    print("=" * 60)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç—Ç–∞–ø–æ–≤
    show_step("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –ö–¢-—Å–Ω–∏–º–∫–æ–≤")
    time.sleep(0.5)
    
    show_success("–ù–∞–π–¥–µ–Ω–æ 1797 DICOM-—Ñ–∞–π–ª–æ–≤")
    time.sleep(0.5)
    
    show_step("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MedGemma –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞")
    time.sleep(1)  # –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
    
    show_success("MedGemma –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    time.sleep(0.5)
    
    show_step("–ó–∞–≥—Ä—É–∑–∫–∞ DICOM –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    time.sleep(0.5)
    
    show_success("–ù–∞–π–¥–µ–Ω–æ 1797 DICOM –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    time.sleep(0.5)
    
    show_info("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: –ü–∞—Ü–∏–µ–Ω—Ç 65 –ª–µ—Ç, –±–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ")
    time.sleep(0.5)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    show_step("–ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞")
    start_progress(1797, "–ê–Ω–∞–ª–∏–∑ CT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –ò–º–∏—Ç–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    for i in range(1, 1798, 50):  # –ö–∞–∂–¥—ã–µ 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        time.sleep(0.1)
        current = min(i + 49, 1797)
        update_progress(current, f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {current} –∏–∑ 1797 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    complete_progress("–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ")
    time.sleep(0.5)
    
    show_success("–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")
    show_info(f"–ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {get_log_file()}")
    
    print("\n‚ú® –ß–ò–°–¢–´–ô –ò–ù–¢–ï–†–§–ï–ô–°!")
    print("‚ú® –í–°–ï –î–ï–¢–ê–õ–ò –í –õ–û–ì–ê–•!")
    print("‚ú® –ü–û–ù–Ø–¢–ù–´–ô –ü–†–û–ì–†–ï–°–°!")

def show_log_benefits():
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    print("\n" + "=" * 60)
    print("üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    
    print("üë§ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:")
    print("  ‚úÖ –ß–∏—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–µ–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π")
    print("  ‚úÖ –ü–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ")
    print("  ‚úÖ –ö—Ä–∞—Å–∏–≤—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã —Å ETA")
    print("  ‚úÖ –ß–µ—Ç–∫–∏–µ —ç—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    
    print("\nüîß –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê:")
    print("  ‚úÖ –í—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –≤ –ª–æ–≥–∞—Ö")
    print("  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏")
    print("  ‚úÖ –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫")
    print("  ‚úÖ –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("  üìâ –£–º–µ–Ω—å—à–µ–Ω–∏–µ '—à—É–º–∞' –≤ –∫–æ–Ω—Å–æ–ª–∏: 90%")
    print("  üìà –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —É–¥–æ–±—Å—Ç–≤–∞: 300%")
    print("  üéØ –§–æ–∫—É—Å –Ω–∞ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: 100%")
    
    log_file = get_log_file()
    if os.path.exists(log_file):
        log_size = os.path.getsize(log_file)
        print(f"\nüìã –¢–µ–∫—É—â–∏–π –ª–æ–≥-—Ñ–∞–π–ª: {log_file}")
        print(f"üì¶ –†–∞–∑–º–µ—Ä: {log_size} –±–∞–π—Ç")
        print(f"üïê –°–æ–∑–¥–∞–Ω: {time.ctime(os.path.getctime(log_file))}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üé¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("CT Reader - Advanced Medical Image Analysis")
    print()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥
    demo_old_approach()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥
    demo_new_approach()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    show_log_benefits()
    
    print("\n" + "=" * 60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("üí° –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é,")
    print("   –∞ –≤—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ª–æ–≥–∞—Ö!")
    print("=" * 60)

if __name__ == "__main__":
    main() 